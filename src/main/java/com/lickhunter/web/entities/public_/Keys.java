/*
 * This file is generated by jOOQ.
 */
package com.lickhunter.web.entities.public_;


import com.lickhunter.web.entities.public_.tables.*;
import com.lickhunter.web.entities.public_.tables.records.*;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CandlestickRecord, Integer> IDENTITY_CANDLESTICK = Identities0.IDENTITY_CANDLESTICK;
    public static final Identity<IncomeHistoryRecord, Long> IDENTITY_INCOME_HISTORY = Identities0.IDENTITY_INCOME_HISTORY;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> PK_ACCOUNT = UniqueKeys0.PK_ACCOUNT;
    public static final UniqueKey<AssetRecord> PK_ASSET = UniqueKeys0.PK_ASSET;
    public static final UniqueKey<CandlestickRecord> PK_CANDLESTICK = UniqueKeys0.PK_CANDLESTICK;
    public static final UniqueKey<CoinsRecord> PK_COINS = UniqueKeys0.PK_COINS;
    public static final UniqueKey<IncomeHistoryRecord> PK_INCOME_HISTORY = UniqueKeys0.PK_INCOME_HISTORY;
    public static final UniqueKey<PositionRecord> PK_POSITION = UniqueKeys0.PK_POSITION;
    public static final UniqueKey<SymbolRecord> PK_SYMBOL = UniqueKeys0.PK_SYMBOL;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AssetRecord, AccountRecord> FK_ASSET_ACCOUNT_ID = ForeignKeys0.FK_ASSET_ACCOUNT_ID;
    public static final ForeignKey<PositionRecord, AccountRecord> FK_POSITION_ACCOUNT_ID = ForeignKeys0.FK_POSITION_ACCOUNT_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CandlestickRecord, Integer> IDENTITY_CANDLESTICK = Internal.createIdentity(Candlestick.CANDLESTICK, Candlestick.CANDLESTICK.ID);
        public static Identity<IncomeHistoryRecord, Long> IDENTITY_INCOME_HISTORY = Internal.createIdentity(IncomeHistory.INCOME_HISTORY, IncomeHistory.INCOME_HISTORY.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> PK_ACCOUNT = Internal.createUniqueKey(Account.ACCOUNT, "PK_ACCOUNT", Account.ACCOUNT.ID);
        public static final UniqueKey<AssetRecord> PK_ASSET = Internal.createUniqueKey(Asset.ASSET, "PK_ASSET", Asset.ASSET.ASSET_);
        public static final UniqueKey<CandlestickRecord> PK_CANDLESTICK = Internal.createUniqueKey(Candlestick.CANDLESTICK, "PK_CANDLESTICK", Candlestick.CANDLESTICK.ID);
        public static final UniqueKey<CoinsRecord> PK_COINS = Internal.createUniqueKey(Coins.COINS, "PK_COINS", Coins.COINS.SYMBOL);
        public static final UniqueKey<IncomeHistoryRecord> PK_INCOME_HISTORY = Internal.createUniqueKey(IncomeHistory.INCOME_HISTORY, "PK_INCOME_HISTORY", IncomeHistory.INCOME_HISTORY.ID);
        public static final UniqueKey<PositionRecord> PK_POSITION = Internal.createUniqueKey(Position.POSITION, "PK_POSITION", Position.POSITION.SYMBOL);
        public static final UniqueKey<SymbolRecord> PK_SYMBOL = Internal.createUniqueKey(Symbol.SYMBOL, "PK_SYMBOL", Symbol.SYMBOL.SYMBOL_);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AssetRecord, AccountRecord> FK_ASSET_ACCOUNT_ID = Internal.createForeignKey(com.lickhunter.web.entities.public_.Keys.PK_ACCOUNT, Asset.ASSET, "FK_ASSET_ACCOUNT_ID", Asset.ASSET.ACCOUNT_ID);
        public static final ForeignKey<PositionRecord, AccountRecord> FK_POSITION_ACCOUNT_ID = Internal.createForeignKey(com.lickhunter.web.entities.public_.Keys.PK_ACCOUNT, Position.POSITION, "FK_POSITION_ACCOUNT_ID", Position.POSITION.ACCOUNT_ID);
    }
}
