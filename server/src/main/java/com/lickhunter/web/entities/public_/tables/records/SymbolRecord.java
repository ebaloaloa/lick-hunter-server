/*
 * This file is generated by jOOQ.
 */
package com.lickhunter.web.entities.public_.tables.records;


import com.lickhunter.web.entities.public_.tables.Symbol;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SymbolRecord extends UpdatableRecordImpl<SymbolRecord> implements Record5<String, Double, Double, Double, Long> {

    private static final long serialVersionUID = 1328368791;

    /**
     * Setter for <code>PUBLIC.SYMBOL.SYMBOL</code>.
     */
    public void setSymbol(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.SYMBOL.SYMBOL</code>.
     */
    public String getSymbol() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.SYMBOL.MARK_PRICE</code>.
     */
    public void setMarkPrice(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.SYMBOL.MARK_PRICE</code>.
     */
    public Double getMarkPrice() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>PUBLIC.SYMBOL.LAST_FUNDING_RATE</code>.
     */
    public void setLastFundingRate(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.SYMBOL.LAST_FUNDING_RATE</code>.
     */
    public Double getLastFundingRate() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>PUBLIC.SYMBOL.NEXT_FUNDING_TIME</code>.
     */
    public void setNextFundingTime(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.SYMBOL.NEXT_FUNDING_TIME</code>.
     */
    public Double getNextFundingTime() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>PUBLIC.SYMBOL.TIME</code>.
     */
    public void setTime(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.SYMBOL.TIME</code>.
     */
    public Long getTime() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, Double, Double, Double, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, Double, Double, Double, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Symbol.SYMBOL.SYMBOL_;
    }

    @Override
    public Field<Double> field2() {
        return Symbol.SYMBOL.MARK_PRICE;
    }

    @Override
    public Field<Double> field3() {
        return Symbol.SYMBOL.LAST_FUNDING_RATE;
    }

    @Override
    public Field<Double> field4() {
        return Symbol.SYMBOL.NEXT_FUNDING_TIME;
    }

    @Override
    public Field<Long> field5() {
        return Symbol.SYMBOL.TIME;
    }

    @Override
    public String component1() {
        return getSymbol();
    }

    @Override
    public Double component2() {
        return getMarkPrice();
    }

    @Override
    public Double component3() {
        return getLastFundingRate();
    }

    @Override
    public Double component4() {
        return getNextFundingTime();
    }

    @Override
    public Long component5() {
        return getTime();
    }

    @Override
    public String value1() {
        return getSymbol();
    }

    @Override
    public Double value2() {
        return getMarkPrice();
    }

    @Override
    public Double value3() {
        return getLastFundingRate();
    }

    @Override
    public Double value4() {
        return getNextFundingTime();
    }

    @Override
    public Long value5() {
        return getTime();
    }

    @Override
    public SymbolRecord value1(String value) {
        setSymbol(value);
        return this;
    }

    @Override
    public SymbolRecord value2(Double value) {
        setMarkPrice(value);
        return this;
    }

    @Override
    public SymbolRecord value3(Double value) {
        setLastFundingRate(value);
        return this;
    }

    @Override
    public SymbolRecord value4(Double value) {
        setNextFundingTime(value);
        return this;
    }

    @Override
    public SymbolRecord value5(Long value) {
        setTime(value);
        return this;
    }

    @Override
    public SymbolRecord values(String value1, Double value2, Double value3, Double value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SymbolRecord
     */
    public SymbolRecord() {
        super(Symbol.SYMBOL);
    }

    /**
     * Create a detached, initialised SymbolRecord
     */
    public SymbolRecord(String symbol, Double markPrice, Double lastFundingRate, Double nextFundingTime, Long time) {
        super(Symbol.SYMBOL);

        set(0, symbol);
        set(1, markPrice);
        set(2, lastFundingRate);
        set(3, nextFundingTime);
        set(4, time);
    }
}
